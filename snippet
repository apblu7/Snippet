import org.springframework.web.util.UriComponentsBuilder;

import java.net.URI;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.LinkedHashMap;
import java.util.Map;

public class UriBuilderUtil {
    private final String baseUrl;
    private final Map<String, Param> params = new LinkedHashMap<>();

    private static class Param {
        String value;
        boolean encode;

        Param(String value, boolean encode) {
            this.value = value;
            this.encode = encode;
        }
    }

    private UriBuilderUtil(String baseUrl) {
        this.baseUrl = baseUrl;
    }

    public static UriBuilderUtil from(String baseUrl) {
        return new UriBuilderUtil(baseUrl);
    }

    public UriBuilderUtil addParam(String key, String value, boolean encode) {
        params.put(key, new Param(value, encode));
        return this;
    }

    public URI build() {
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(baseUrl);
        StringBuilder rawQuery = new StringBuilder();

        for (Map.Entry<String, Param> entry : params.entrySet()) {
            String key = entry.getKey();
            Param param = entry.getValue();

            if (param.encode) {
                builder.queryParam(key, param.value);
            } else {
                rawQuery.append("&").append(key).append("=").append(param.value);
            }
        }

        String base = builder.build().encode().toUriString();

        if (rawQuery.length() > 0) {
            if (!base.contains("?")) {
                base += "?";
                rawQuery.deleteCharAt(0); // 첫 & 제거
            }
            base += rawQuery.toString();
        }

        return URI.create(base);
    }
}