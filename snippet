#!/bin/bash

# Step 3. Check uploaded WAR file

PROJECT_NAME=ets_test
WAR_FILE_NAME="${PROJECT_NAME}.war"
REMOTE_UPLOAD_DIR="/home/ubuntu"
REMOTE_BACKUP_PATH="/home/ubuntu/deploy"
REMOTE_DEPLOY_PATH="/opt/apache-tomcat-9.0.89/webapps"
WAR_PATH="${REMOTE_UPLOAD_DIR}/${WAR_FILE_NAME}"
DEPLOYED_WAR_PATH="${REMOTE_DEPLOY_PATH}/${WAR_FILE_NAME}"

echo "[STEP 3] Checking uploaded WAR file..."

if [ ! -f "$WAR_PATH" ]; then
  echo "[ERROR] WAR file not found at: $WAR_PATH"
  exit 1
fi

if [ ! -s "$WAR_PATH" ]; then
  echo "[ERROR] WAR file is empty: $WAR_PATH"
  exit 1
fi

echo "[INFO] WAR file is present and non-empty: $WAR_PATH"

# Step 4. Create backup directory

echo "[STEP 4] Creating backup directory..."

TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
BACKUP_DIR="${REMOTE_BACKUP_PATH}/${TIMESTAMP}-${PROJECT_NAME}"

mkdir -p "$BACKUP_DIR"
if [ $? -ne 0 ]; then
  echo "[ERROR] Failed to create backup directory: $BACKUP_DIR"
  exit 1
fi

echo "[INFO] Backup directory created: $BACKUP_DIR"

# Step 5. Move deployed WAR to backup (if exists)

echo "[STEP 5] Backing up deployed WAR file..."

if [ ! -f "$DEPLOYED_WAR_PATH" ]; then
  echo "[ERROR] No deployed WAR file to backup at: $DEPLOYED_WAR_PATH"
  exit 1
fi

mv "$DEPLOYED_WAR_PATH" "$BACKUP_DIR/"
if [ $? -ne 0 ]; then
  echo "[ERROR] Failed to move deployed WAR to backup"
  exit 1
fi

echo "[INFO] Deployed WAR moved to: $BACKUP_DIR/"

# Step 6. Move uploaded WAR to deploy path

echo "[STEP 6] Moving uploaded WAR to deployment directory..."

mv "$WAR_PATH" "$REMOTE_DEPLOY_PATH/"
if [ $? -ne 0 ]; then
  echo "[ERROR] Failed to move WAR file to deployment directory"
  exit 1
fi

echo "[INFO] WAR file deployed to: $REMOTE_DEPLOY_PATH"