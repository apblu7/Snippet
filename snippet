import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.*;
import java.util.Iterator;
import java.util.Map;

public class JsonToTsvConverter {
    public static void main(String[] args) {
        String inputJsonPath = "bom.json";   // 입력 JSON 파일 경로
        String outputTextPath = "bom.txt";   // 출력 텍스트 파일 경로

        try {
            // JSON 파일 읽기
            ObjectMapper mapper = new ObjectMapper();
            JsonNode rootNode = mapper.readTree(new File(inputJsonPath));

            // 구성 요소 배열 추출
            JsonNode componentsNode = rootNode.get("components");
            if (componentsNode == null || !componentsNode.isArray()) {
                System.out.println("'components' 배열을 찾을 수 없습니다.");
                return;
            }

            // 출력 파일 작성
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(outputTextPath))) {
                // 헤더 작성
                if (componentsNode.size() > 0) {
                    JsonNode firstComponent = componentsNode.get(0);
                    Iterator<String> fieldNames = firstComponent.fieldNames();
                    while (fieldNames.hasNext()) {
                        writer.write(fieldNames.next());
                        if (fieldNames.hasNext()) {
                            writer.write("\t");
                        }
                    }
                    writer.newLine();
                }

                // 각 구성 요소에 대해 행 작성
                for (JsonNode component : componentsNode) {
                    Iterator<Map.Entry<String, JsonNode>> fields = component.fields();
                    while (fields.hasNext()) {
                        Map.Entry<String, JsonNode> field = fields.next();
                        writer.write(field.getValue().asText());
                        if (fields.hasNext()) {
                            writer.write("\t");
                        }
                    }
                    writer.newLine();
                }
            }

            System.out.println("텍스트 파일이 성공적으로 생성되었습니다: " + outputTextPath);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}